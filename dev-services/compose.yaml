services:
  postgres:
    image: postgres
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=tasks
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_USER=postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [CMD, pg_isready, -U, postgres]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./data/redis/cache:/data
    ports:
      - 6379:6379
    healthcheck:
      test: [CMD, redis-cli, --raw, incr, ping]
      interval: 10s
      timeout: 5s
      retries: 5
  redis-insight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    environment:
      - RI_APP_PORT=5540
      - RI_APP_HOST=0.0.0.0
      # - RI_PROXY_PATH=use when do reverse proxy
      - RI_REDIS_HOST=redis
      - RI_REDIS_PORT=6379
    # - RI_REDIS_USERNAME=
    # - RI_REDIS_PASSWORD=
    ports:
      - 5540:5540
    volumes:
      - ./data/redis-insight:/data
    healthcheck:
      test: [CMD, curl, --fail, http://localhost:5540/api/health]
      interval: 10s
      timeout: 5s
      retries: 5
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID:-minio}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY:-miniosecretkey}
    volumes:
      - ./data/minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [CMD, /usr/bin/mc, ready, local]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres_data:
